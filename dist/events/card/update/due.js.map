{"version":3,"file":"due.js","sourceRoot":"/","sources":["events/card/update/due.ts"],"names":[],"mappings":"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","sourcesContent":["import { cutoffText, formatTime } from '../../../util';\nimport { EventFunction } from '../../../util/events';\n\nexport const event: EventFunction = {\n  name: 'UPDATE_CARD_DUE',\n  async onEvent(data) {\n    const _ = data.locale;\n    const changedKey = Object.keys(data.oldData)[0];\n    if (changedKey === 'due') {\n      const title = !data.oldData.due ? 'webhooks.due_add' : !data.card.due ? 'webhooks.due_remove' : 'webhooks.due_change';\n      return data.send({\n        default: {\n          title: _(title, {\n            member: data.invoker.webhookSafeName,\n            card: cutoffText(data.card.name, 50)\n          }),\n          description: data.embedDescription(['card', 'list']),\n          fields: [\n            data.oldData.due\n              ? {\n                  name: '*' + _('trello.old_due') + '*',\n                  value: formatTime(data.oldData.due),\n                  inline: true\n                }\n              : null,\n            data.card.due\n              ? {\n                  name: '*' + _('trello.new_due') + '*',\n                  value: formatTime(data.card.due),\n                  inline: true\n                }\n              : null\n          ].filter((v) => !!v)\n        },\n        small: {\n          description: _(title, {\n            member: `[${data.invoker.webhookSafeName}](https://trello.com/${data.invoker.username}?utm_source=tacobot.app)`,\n            card: `[${cutoffText(data.card.name, 25)}](https://trello.com/c/${data.card.shortLink}?utm_source=tacobot.app)`\n          }),\n          fields: [\n            data.oldData.due\n              ? {\n                  name: '*' + _('trello.old_due') + '*',\n                  value: formatTime(data.oldData.due),\n                  inline: true\n                }\n              : null,\n            data.card.due\n              ? {\n                  name: '*' + _('trello.new_due') + '*',\n                  value: formatTime(data.card.due),\n                  inline: true\n                }\n              : null\n          ].filter((v) => !!v)\n        }\n      });\n    } else if (changedKey === 'dueComplete')\n      return data.send({\n        default: {\n          title: _(data.card.dueComplete ? 'webhooks.due_on' : 'webhooks.due_off', {\n            member: data.invoker.webhookSafeName,\n            card: cutoffText(data.card.name, 50)\n          }),\n          description: data.embedDescription(['card', 'list'])\n        },\n        small: {\n          description: _(data.card.dueComplete ? 'webhooks.due_on' : 'webhooks.due_off', {\n            member: `[${data.invoker.webhookSafeName}](https://trello.com/${data.invoker.username}?utm_source=tacobot.app)`,\n            card: `[${cutoffText(data.card.name, 25)}](https://trello.com/c/${data.card.shortLink}?utm_source=tacobot.app)`\n          })\n        }\n      });\n  }\n};\n"]}