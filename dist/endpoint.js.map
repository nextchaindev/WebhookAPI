{"version":3,"file":"endpoint.js","sourceRoot":"/","sources":["endpoint.ts"],"names":[],"mappings":"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","sourcesContent":["import { addBreadcrumb, captureException, configureScope, startTransaction } from '@sentry/node';\nimport { createHmac } from 'crypto';\nimport { FastifyRequest, RouteOptions } from 'fastify';\nimport { RouteGenericInterface } from 'fastify/types/route';\nimport { IncomingMessage, Server } from 'http';\n\nimport { cardListMapCache, getListID } from './cache';\nimport { Webhook } from './db/postgres';\nimport { logger } from './logger';\nimport { events, findFilter } from './util/events';\nimport { TrelloDefaultAction, TrelloPayload } from './util/types';\nimport WebhookData from './util/webhookData';\nimport WebhookFilters from './util/webhookFilters';\n\nexport const whitelistedIPs = process.env.WHITELISTED_IPS ? process.env.WHITELISTED_IPS.split(',') : [];\n\nfunction validateRequest(request: FastifyRequest<RouteGenericInterface, Server, IncomingMessage>) {\n  const { id } = request.params as { id: string };\n  const content = JSON.stringify(request.body) + process.env.API_URL + id;\n  const hash = createHmac('sha1', process.env.TRELLO_SECRET).update(content).digest('base64');\n  return hash === request.headers['x-trello-webhook'];\n}\n\nasync function canBeSent(webhook: Webhook, body: TrelloPayload<any>) {\n  // console.debug(JSON.stringify(body));\n  const actionData = body.action.data;\n  const boardID = body.model.id;\n  const list = actionData.list || actionData.listAfter;\n  let listID = list ? list.id : null;\n  const card = actionData.card;\n\n  // No filtered cards or lists have been assigned\n  // if (!webhook.cards.length && !webhook.lists.length) return true;\n\n  // No card was found on the event\n  if (!card) return true;\n\n  let allowed = true;\n\n  // If there are list filters and no list was found on the event\n  // if (!listID && webhook.lists.length) {\n  //   if (cardListMapCache.has(card.id)) listID = cardListMapCache.get(card.id)[1];\n  //   else listID = await getListID(card.id, boardID, webhook);\n  // }\n\n  // Whitelist policy\n  // if (webhook.whitelist) {\n  //   allowed = false;\n\n  //   if (webhook.cards.length) allowed = allowed || webhook.cards.includes(card.id);\n  //   if (webhook.lists.length && listID) allowed = allowed || webhook.lists.includes(listID);\n  // } else {\n  //   // Blacklist policy\n  //   allowed = true;\n\n  //   if (webhook.cards.length) allowed = !webhook.cards.includes(card.id);\n  //   if (webhook.lists.length && listID) allowed = !(!allowed || webhook.lists.includes(listID));\n  // }\n\n  return allowed;\n}\n\nexport const headRoute: RouteOptions = {\n  method: 'HEAD',\n  url: '/:id',\n  handler: async (request, reply) => {\n    const { id } = request.params as { id: string };\n    if (!/^[0-9a-f]{24}$/.test(id)) return reply.status(400).send('Bad request');\n    else return reply.status(200).send('Ready to recieve.');\n  }\n};\n\nexport const route: RouteOptions = {\n  method: 'POST',\n  url: '/:id',\n  handler: async (request, reply) => {\n    const { id } = request.params as { id: string };\n\n    if (!/^[0-9a-f]{24}$/.test(id)) return reply.status(400).send('Bad request');\n\n    const ip = (request.headers['x-forwarded-for'] as string) || request.ip;\n\n    if (whitelistedIPs.length && !whitelistedIPs.includes(ip)) {\n      return reply.status(401).send('Unauthorized');\n    }\n\n    // if (!validateRequest(request)) {\n    //   logger.info(`Failed webhook validation from request @ ${id}`, ip);\n    //   return reply.status(401).send('Validation failed');\n    // }\n\n    const body = request.body as TrelloPayload<TrelloDefaultAction>;\n    const [filter, filterFound] = findFilter(body);\n\n    const transaction = startTransaction({\n      op: 'webhook.post',\n      name: `Board ${body.model.shortUrl.split('/')[4]} posted: ${filter}`\n    });\n\n    configureScope((scope) => {\n      scope.setSpan(transaction);\n      scope.setTag('request.ownerID', id);\n      scope.setTag('request.filter', filter);\n      scope.setTag('request.filterFound', filterFound);\n      scope.setTag('request.board', body.model.shortUrl.split('/')[4]);\n      scope.setExtra('request.ip', ip);\n    });\n\n    logger.log(\n      `Incoming request @ ip=${ip} memberID=${id} modelID=${body.model.id} board=${body.model.shortUrl} filter=${filter}`,\n      body.action.data\n    );\n\n    try {\n      addBreadcrumb({\n        category: 'filter',\n        message: `Using filter: ${body.action.type} / ${filter}`,\n        level: 'info',\n        data: body.action.data\n      });\n\n      if (!filterFound) {\n        logger.info(`Unknown filter: ${body.action.type} / ${filter}`, body.action.data);\n        transaction.finish();\n        return reply.status(200).send('Recieved');\n      }\n\n      const webhooks = await Webhook.findAll({\n        where: {\n          modelID: body.model.id,\n          memberID: id,\n          active: true\n        }\n      });\n\n      logger.info(`Found ${webhooks.length} webhooks for board ${body.model.id}`);\n      logger.debug(webhooks);\n\n      await Promise.all(\n        webhooks.map(async (webhook) => {\n          const data = new WebhookData(request, webhook, filter);\n          const filters = new WebhookFilters(BigInt(webhook.filters));\n\n          const allowed = await canBeSent(webhook, body);\n          const postEvent = allowed && filters.has(filter) && webhook.webhookID;\n\n          addBreadcrumb({\n            category: 'webhook',\n            message: `Webhook ${webhook.webhookID} ${\n              allowed ? (postEvent ? 'posting' : 'allowed') : 'denied'\n            }`,\n            level: 'info',\n            data: {\n              ...webhook.toJSON(),\n              webhookToken: '<hidden>'\n            }\n          });\n\n          logger.debug(\n            `Webhook ${webhook.webhookID} ${allowed ? (postEvent ? 'posting' : 'allowed') : 'denied'}`\n          );\n\n          if (postEvent) return events.get(filter).onEvent(data);\n        })\n      );\n\n      reply.status(200).send('Recieved');\n    } catch (e) {\n      captureException(e);\n      logger.error(e);\n      reply.status(500).send('Internal error');\n    } finally {\n      transaction.finish();\n    }\n  }\n};\n"]}