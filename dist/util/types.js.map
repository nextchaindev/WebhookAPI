{"version":3,"file":"types.js","sourceRoot":"/","sources":["util/types.ts"],"names":[],"mappings":"","sourcesContent":["export interface TrelloPayload<T extends TrelloDefaultAction> {\n  action: {\n    type: string;\n    id: string;\n    idMemberCreator: string;\n    date: string;\n    memberCreator: TrelloUser;\n    member?: TrelloUser;\n    data: T;\n    display: any;\n  };\n  model: Required<TrelloBoard> & {\n    idOrganization: string;\n    pinned: boolean;\n    url: string;\n    shortUrl: string;\n  };\n}\n\ntype TrelloPermissionLevel = 'public' | 'private' | 'org' | 'observers';\ntype TrelloBackgroundBrightness = 'dark' | 'light';\ntype TrelloBackgroundSize = 'normal' | 'full';\ntype TrelloColor = 'green' | 'yellow' | 'red' | 'orange' | 'lime' | 'purple' | 'blue' | 'sky' | 'pink' | 'black';\n\nexport interface TrelloScaledImage {\n  width: number;\n  height: number;\n  url: string;\n}\n\nexport interface TrelloUser {\n  id: number;\n  avatarHash?: string;\n  fullName?: string;\n  avatarUrl?: string;\n  username: string;\n  initials: string;\n}\n\nexport interface TrelloDefaultAction {\n  type: string;\n  data: {\n    old?: any;\n    plugin?: TrelloPlugin;\n    board: TrelloBoard;\n    boardTarget?: TrelloBoard;\n    boardSource?: TrelloBoard;\n    label?: TrelloLabel;\n    list?: TrelloList;\n    listBefore?: TrelloList;\n    listAfter?: TrelloList;\n    card?: TrelloCard;\n    cardSource?: TrelloCardSource;\n    checklist?: any;\n    sourceChecklist?: any;\n    checklistItem?: any;\n    customField?: any;\n    customFieldItem?: any;\n    idOriginalCommenter?: string;\n    text?: string;\n    voted?: boolean;\n  };\n}\n\nexport interface TrelloPlugin {\n  id: string;\n  idOrganizationOwner: string;\n  author: string;\n  capabilities: any[];\n  capabilitiesOptions: any[];\n  categories: any[][];\n  iframeConnectorUrl: string;\n  name: string;\n  privacyUrl: string;\n  public: boolean;\n  moderatedState: null;\n  supportEmail: string;\n  url: string;\n  tags: any;\n  heroImageUrl: any;\n  isCompliantWithPrivacyStandards: null;\n  usageBrackets: any;\n  claimedDomains: any[];\n  icon: any;\n  listing: any;\n}\n\nexport interface TrelloBoard {\n  id: string;\n  name: string;\n  shortLink: string;\n  desc?: string;\n  closed?: boolean;\n  prefs?: {\n    permissionLevel: TrelloPermissionLevel;\n    voting: TrelloPermissionLevel;\n    comments: TrelloPermissionLevel;\n    invitations: TrelloPermissionLevel;\n    selfJoin: boolean;\n    cardCovers: boolean;\n    canBePublic: boolean;\n    canBeOrg: boolean;\n    canBePrivate: boolean;\n    canInvite: boolean;\n  };\n  labelNames?: {\n    [key: string]: string;\n  };\n}\n\nexport interface TrelloList {\n  id: string;\n  name: string;\n  pos?: number;\n  closed?: boolean;\n}\n\nexport interface TrelloLabel {\n  id: string;\n  name: string;\n  color: TrelloColor;\n}\n\nexport interface TrelloCard {\n  id: string;\n  name: string;\n  idShort: number;\n  shortLink: string;\n  desc?: string;\n  idList?: string;\n  closed?: boolean;\n  dueComplete?: boolean;\n  due?: string;\n  dueReminder?: number | null;\n  idAttachmentCover?: string;\n  cover?: {\n    brightness: TrelloBackgroundBrightness;\n    size: TrelloBackgroundSize;\n    color: TrelloColor;\n    scaled?: Array<TrelloScaledImage>;\n    imageUrl?: string;\n  };\n}\n\nexport type TrelloCardSource = Pick<TrelloCard, 'id' | 'name' | 'idShort' | 'shortLink'>;\n"]}