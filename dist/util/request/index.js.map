{"version":3,"file":"index.js","sourceRoot":"/","sources":["util/request/index.ts"],"names":[],"mappings":"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","sourcesContent":["import HTTPS from 'https';\nimport Zlib from 'zlib';\n\nimport { logger } from '../../logger';\nimport DiscordHTTPError from './DiscordHTTPError';\nimport DiscordRESTError from './DiscordRESTError';\nimport MultipartData from './multipartData';\nimport SequentialBucket from './sequentialBucket';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nexport const USER_AGENT = `DiscordBot (https://github.com/trello-talk/WebhookAPI, ${require('../../../package.json').version})`;\n\nexport const API_VERSION = 8;\nexport const API_BASE_URL = `/api/v${API_VERSION}`;\n\nexport function cleanBuckets() {\n  for (const route in ratelimits) {\n    const bucket = ratelimits[route];\n    if (bucket.reset < Date.now()) delete ratelimits[route];\n  }\n}\n\nconst requestTimeout = parseInt(process.env.REQUEST_TIMEOUT, 10) || 15000;\nconst latencyThreshold = parseInt(process.env.LATENCY_THRESHOLD, 10) || 30000;\nconst ratelimits: { [route: string]: SequentialBucket } = {};\nconst latencyRef = {\n  latency: 500,\n  offset: parseInt(process.env.RATELIMITER_OFFSET, 10) || 0,\n  raw: new Array(10).fill(500),\n  timeOffset: 0,\n  timeOffsets: new Array(10).fill(0),\n  lastTimeOffsetCheck: 0\n};\n\nfunction getRoute(url: string) {\n  const route = url.replace(/^\\/webhooks\\/(\\d+)\\/[A-Za-z0-9-_]{64,}/, '/webhooks/$1/:token');\n  return route;\n}\n\nexport function request(method: string, url: string, body?: any, file?: any, short = false): Promise<any> {\n  const route = getRoute(url);\n\n  const _stackHolder: { stack: string } = { stack: '' }; // Preserve async stack\n  Error.captureStackTrace(_stackHolder);\n\n  return new Promise((resolve, reject) => {\n    let attempts = 0;\n\n    const actualCall = (cb: () => void) => {\n      const headers: { [key: string]: string } = {\n        'User-Agent': USER_AGENT,\n        'Accept-Encoding': 'gzip,deflate',\n        'X-RateLimit-Precision': 'millisecond'\n      };\n      let data: any;\n      const finalURL = url;\n\n      try {\n        if (file) {\n          if (Array.isArray(file)) {\n            data = new MultipartData();\n            headers['Content-Type'] = 'multipart/form-data; boundary=' + data.boundary;\n            file.forEach((f) => {\n              if (!f.file) {\n                return;\n              }\n              (data as MultipartData).attach(f.name, f.file, f.name);\n            });\n            if (body) data.attach('payload_json', body);\n            data = data.finish();\n          } else if (file.file) {\n            data = new MultipartData();\n            headers['Content-Type'] = 'multipart/form-data; boundary=' + data.boundary;\n            data.attach('file', file.file, file.name);\n            if (body) data.attach('payload_json', body);\n            data = data.finish();\n          } else {\n            throw new Error('Invalid file object');\n          }\n        } else if (body) {\n          if (method !== 'GET' && method !== 'DELETE') {\n            data = JSON.stringify(body);\n            headers['Content-Type'] = 'application/json';\n          }\n        }\n      } catch (err) {\n        cb();\n        reject(err);\n        return;\n      }\n\n      const req = HTTPS.request({\n        method,\n        host: 'discord.com',\n        path: API_BASE_URL + finalURL,\n        headers: headers\n      });\n\n      let reqError: any;\n\n      req\n        .once('abort', () => {\n          cb();\n          reqError = reqError || new Error(`Request aborted by client on ${method} ${url}`);\n          reqError.req = req;\n          reject(reqError);\n        })\n        .once('error', (err) => {\n          reqError = err;\n          req.destroy();\n        });\n\n      let latency = Date.now();\n\n      req.once('response', (resp) => {\n        latency = Date.now() - latency;\n        latencyRef.raw.push(latency);\n        latencyRef.latency = latencyRef.latency - ~~((latencyRef.raw.shift() as number) / 10) + ~~(latency / 10);\n\n        const headerNow = Date.parse(resp.headers['date'] as string);\n        if (latencyRef.lastTimeOffsetCheck < Date.now() - 5000) {\n          const timeOffset = headerNow + 500 - (latencyRef.lastTimeOffsetCheck = Date.now());\n          if (latencyRef.timeOffset - latencyRef.latency >= latencyThreshold && timeOffset - latencyRef.latency >= latencyThreshold) {\n            logger.warn(`Your clock is ${latencyRef.timeOffset}ms behind Discord's server clock. Please check your connection and system time.`);\n          }\n          latencyRef.timeOffset = latencyRef.timeOffset - ~~((latencyRef.timeOffsets.shift() as number) / 10) + ~~(timeOffset / 10);\n          latencyRef.timeOffsets.push(timeOffset);\n        }\n\n        resp.once('aborted', () => {\n          cb();\n          reqError = reqError || new Error(`Request aborted by server on ${method} ${url}`);\n          reqError.req = req;\n          reject(reqError);\n        });\n\n        let response: any = '';\n\n        let _respStream = resp;\n        if (resp.headers['content-encoding']) {\n          if (resp.headers['content-encoding'].includes('gzip')) {\n            // @ts-ignore\n            _respStream = resp.pipe(Zlib.createGunzip());\n          } else if (resp.headers['content-encoding'].includes('deflate')) {\n            // @ts-ignore\n            _respStream = resp.pipe(Zlib.createInflate());\n          }\n        }\n\n        _respStream\n          .on('data', (str) => {\n            response += str;\n          })\n          .on('error', (err) => {\n            reqError = err;\n            req.destroy();\n          })\n          .once('end', async () => {\n            const now = Date.now();\n\n            if (resp.headers['x-ratelimit-limit']) ratelimits[route].limit = +resp.headers['x-ratelimit-limit'];\n\n            if (\n              method !== 'GET' &&\n              (resp.headers['x-ratelimit-remaining'] == undefined || resp.headers['x-ratelimit-limit'] == undefined) &&\n              ratelimits[route].limit !== 1\n            ) {\n              logger.debug(\n                `Missing ratelimit headers for SequentialBucket(${ratelimits[route].remaining}/${ratelimits[route].limit}) with non-default limit\\n` +\n                  `${resp.statusCode} ${resp.headers['content-type']}: ${method} ${route} | ${resp.headers['cf-ray']}\\n` +\n                  'content-type = ' +\n                  '\\n' +\n                  'x-ratelimit-remaining = ' +\n                  resp.headers['x-ratelimit-remaining'] +\n                  '\\n' +\n                  'x-ratelimit-limit = ' +\n                  resp.headers['x-ratelimit-limit'] +\n                  '\\n' +\n                  'x-ratelimit-reset = ' +\n                  resp.headers['x-ratelimit-reset'] +\n                  '\\n' +\n                  'x-ratelimit-global = ' +\n                  resp.headers['x-ratelimit-global']\n              );\n            }\n\n            await ratelimits[route].setValues({\n              remaining: resp.headers['x-ratelimit-remaining'] === undefined ? 1 : +resp.headers['x-ratelimit-remaining'] || 0\n            });\n\n            let retryAfter = parseInt(resp.headers['retry-after'] as string);\n            // Discord breaks RFC here, using milliseconds instead of seconds (╯°□°）╯︵ ┻━┻\n            // This is the unofficial Discord dev-recommended way of detecting that\n            if (retryAfter && (typeof resp.headers['via'] !== 'string' || !resp.headers['via'].includes('1.1 google'))) {\n              retryAfter *= 1000;\n              if (retryAfter >= 1000 * 1000) {\n                logger.warn(\n                  `Excessive Retry-After interval detected (Retry-After: ${resp.headers['retry-after']} * 1000, Via: ${resp.headers['via']})`\n                );\n              }\n            }\n            if (retryAfter >= 0) {\n              if (resp.headers['x-ratelimit-global']) {\n                this.globalBlock = true;\n                setTimeout(() => this.globalUnblock(), retryAfter || 1);\n              } else\n                await ratelimits[route].setValues({\n                  reset: (retryAfter || 1) + now\n                });\n            } else if (resp.headers['x-ratelimit-reset']) {\n              if (~route.lastIndexOf('/reactions/:id') && +resp.headers['x-ratelimit-reset'] * 1000 - headerNow === 1000)\n                await ratelimits[route].setValues({\n                  reset: now + 250\n                });\n              else\n                await ratelimits[route].setValues({\n                  reset: Math.max(+resp.headers['x-ratelimit-reset'] * 1000 - latencyRef.timeOffset, now)\n                });\n            } else\n              await ratelimits[route].setValues({\n                reset: now\n              });\n\n            if (resp.statusCode !== 429) {\n              logger.debug(\n                `${now} ${route} ${resp.statusCode}: ${latency}ms (${latencyRef.latency}ms avg) | ${ratelimits[route].remaining}/${\n                  ratelimits[route].limit\n                } left | Reset ${ratelimits[route].reset} (${ratelimits[route].reset - now}ms left)`\n              );\n            }\n\n            if ((resp.statusCode as number) >= 300) {\n              if (resp.statusCode === 429) {\n                logger.debug(\n                  `${resp.headers['x-ratelimit-global'] ? 'Global' : 'Unexpected'} 429 (╯°□°）╯︵ ┻━┻: ${response}\\n${\n                    body && body.content\n                  } ${now} ${route} ${resp.statusCode}: ${latency}ms (${latencyRef.latency}ms avg) | ${ratelimits[route].remaining}/${\n                    ratelimits[route].limit\n                  } left | Reset ${ratelimits[route].reset} (${ratelimits[route].reset - now}ms left)`\n                );\n                // For some reason, the Retry-After header isn't in ms precision\n                // This should hopefully fix any spam requests\n                if (response) {\n                  try {\n                    response = JSON.parse(response);\n                    if (response.retry_after) retryAfter = response.retry_after * 1000 + 250;\n                  } catch (err) {\n                    reject(err);\n                    return;\n                  }\n                }\n                if (retryAfter) {\n                  setTimeout(() => {\n                    cb();\n                    request(method, url, body, file, true).then(resolve).catch(reject);\n                  }, retryAfter);\n                  return;\n                } else {\n                  cb();\n                  request(method, url, body, file, true).then(resolve).catch(reject);\n                  return;\n                }\n              } else if (resp.statusCode === 502 && ++attempts < 4) {\n                logger.warn('A wild 502 appeared! Thanks CloudFlare!');\n                setTimeout(() => {\n                  request(method, url, body, file, true).then(resolve).catch(reject);\n                }, Math.floor(Math.random() * 1900 + 100));\n                return cb();\n              }\n              cb();\n\n              if (response.length > 0) {\n                if (resp.headers['content-type'] === 'application/json') {\n                  try {\n                    response = JSON.parse(response);\n                  } catch (err) {\n                    reject(err);\n                    return;\n                  }\n                }\n              }\n\n              let { stack } = _stackHolder;\n              if (stack.startsWith('Error\\n')) {\n                stack = stack.substring(6);\n              }\n              let err;\n              if (response.code) {\n                err = new DiscordRESTError(req, resp, response, stack);\n              } else {\n                err = new DiscordHTTPError(req, resp, response, stack);\n              }\n              reject(err);\n              return;\n            }\n\n            if (response.length > 0) {\n              if (resp.headers['content-type'] === 'application/json') {\n                try {\n                  response = JSON.parse(response);\n                } catch (err) {\n                  cb();\n                  reject(err);\n                  return;\n                }\n              }\n            }\n\n            cb();\n            resolve(response);\n          });\n      });\n\n      req.setTimeout(requestTimeout, () => {\n        reqError = new Error(`Request timed out (>${requestTimeout}ms) on ${method} ${url}`);\n        req.destroy();\n      });\n\n      if (Array.isArray(data)) {\n        for (const chunk of data) req.write(chunk);\n        req.end();\n      } else req.end(data);\n    };\n\n    if (!ratelimits[route]) {\n      ratelimits[route] = new SequentialBucket(route, 1, latencyRef);\n    }\n    ratelimits[route].queue(actualCall, short);\n  });\n}\n"]}